<print, >
<(, >
<cte_cadena, PRUEBA 1>
<), >
<;, >
<var, >
<int, >
<id, a>
<=, >
<cte_int, 1>
<;, >
<var, >
<int, >
<id, b>
<=, >
<cte_int, 2>
<;, >
<var, >
<int, >
<id, c>
<=, >
<cte_int, 3>
<;, >
<var, >
<int, >
<id, d>
<=, >
<cte_int, 4>
<;, >
<function, >
<int, >
<id, suma>
<(, >
<int, >
<id, x>
<,, >
<int, >
<id, y>
<), >
<{, >
<return, >
<id, x>
<+, >
<id, y>
<;, >
<}, >
<function, >
<int, >
<id, resta>
<(, >
<int, >
<id, x>
<,, >
<int, >
<id, y>
<), >
<{, >
<return, >
<id, x>
<-, >
<id, y>
<;, >
<}, >
<function, >
<int, >
<id, mult>
<(, >
<int, >
<id, x>
<,, >
<int, >
<id, y>
<), >
<{, >
<return, >
<id, x>
<*, >
<id, y>
<;, >
<}, >
<function, >
<int, >
<id, div>
<(, >
<int, >
<id, x>
<,, >
<int, >
<id, y>
<), >
<{, >
<return, >
<id, x>
</, >
<id, y>
<;, >
<}, >
<var, >
<int, >
<id, e>
<=, >
<id, suma>
<(, >
<id, a>
<,, >
<id, b>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Resultado esperado es 3>
<), >
<;, >
<print, >
<(, >
<id, e>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Resultado esperado es false>
<), >
<;, >
<print, >
<(, >
<id, e>
<<, >
<cte_int, 3>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Resultado esperado es true>
<), >
<;, >
<print, >
<(, >
<id, e>
<<=, >
<cte_int, 3>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Resultado esperado es true>
<), >
<;, >
<print, >
<(, >
<id, e>
<==, >
<cte_int, 3>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Resultado esperado es true>
<), >
<;, >
<print, >
<(, >
<id, e>
<>=, >
<cte_int, 3>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Resultado esperado es false>
<), >
<;, >
<print, >
<(, >
<id, e>
<>, >
<cte_int, 3>
<), >
<;, >
<var, >
<int, >
<id, f>
<=, >
<id, resta>
<(, >
<id, d>
<,, >
<id, c>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Resultado esperado es 3>
<), >
<;, >
<print, >
<(, >
<id, div>
<(, >
<id, e>
<,, >
<id, f>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, Resultado esperado es 8>
<), >
<;, >
<print, >
<(, >
<id, mult>
<(, >
<id, suma>
<(, >
<id, a>
<,, >
<id, c>
<), >
<,, >
<id, resta>
<(, >
<id, d>
<,, >
<id, b>
<), >
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, PRUEBA 2>
<), >
<;, >
<var, >
<bool, >
<id, varTrue>
<=, >
<cte_logica, true>
<;, >
<var, >
<bool, >
<id, varFalse>
<=, >
<cte_logica, false>
<;, >
<var, >
<bool, >
<id, oIgual>
<=, >
<cte_logica, false>
<;, >
<print, >
<(, >
<cte_cadena, Deberia resultar true>
<), >
<;, >
<id, oIgual>
<|=, >
<id, varTrue>
<;, >
<print, >
<(, >
<id, oIgual>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Deberia resultar true>
<), >
<;, >
<id, oIgual>
<|=, >
<id, varFalse>
<;, >
<print, >
<(, >
<id, oIgual>
<), >
<;, >
<function, >
<bool, >
<id, oo>
<(, >
<bool, >
<id, x>
<,, >
<bool, >
<id, y>
<), >
<{, >
<return, >
<id, x>
<||, >
<id, y>
<;, >
<}, >
<function, >
<bool, >
<id, yy>
<(, >
<bool, >
<id, x>
<,, >
<bool, >
<id, y>
<), >
<{, >
<return, >
<id, x>
<&&, >
<id, y>
<;, >
<}, >
<print, >
<(, >
<cte_cadena, Debe resultar, en orden, false true true true>
<), >
<;, >
<print, >
<(, >
<id, oo>
<(, >
<id, varFalse>
<,, >
<id, varFalse>
<), >
<), >
<;, >
<print, >
<(, >
<id, oo>
<(, >
<id, varTrue>
<,, >
<id, varFalse>
<), >
<), >
<;, >
<print, >
<(, >
<id, oo>
<(, >
<id, varFalse>
<,, >
<id, varTrue>
<), >
<), >
<;, >
<print, >
<(, >
<id, oo>
<(, >
<id, varTrue>
<,, >
<id, varTrue>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, Debe resultar, en orden, false false false true>
<), >
<;, >
<print, >
<(, >
<id, yy>
<(, >
<id, varFalse>
<,, >
<id, varFalse>
<), >
<), >
<;, >
<print, >
<(, >
<id, yy>
<(, >
<id, varTrue>
<,, >
<id, varFalse>
<), >
<), >
<;, >
<print, >
<(, >
<id, yy>
<(, >
<id, varFalse>
<,, >
<id, varTrue>
<), >
<), >
<;, >
<print, >
<(, >
<id, yy>
<(, >
<id, varTrue>
<,, >
<id, varTrue>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, Debe resultar, en orden, false true false>
<), >
<;, >
<print, >
<(, >
<!, >
<id, varTrue>
<), >
<;, >
<print, >
<(, >
<!, >
<id, varFalse>
<), >
<;, >
<print, >
<(, >
<id, oo>
<(, >
<id, varFalse>
<,, >
<!, >
<id, varTrue>
<), >
<), >
<;, >
<var, >
<string, >
<id, nombre>
<=, >
<cte_cadena, >
<;, >
<function, >
<string, >
<id, saludar>
<(, >
<string, >
<id, name>
<), >
<{, >
<var, >
<string, >
<id, saludo>
<=, >
<cte_cadena, Hola >
<+, >
<id, name>
<;, >
<return, >
<id, saludo>
<;, >
<}, >
<print, >
<(, >
<cte_cadena, Introduzca una cadena:>
<), >
<;, >
<prompt, >
<(, >
<id, nombre>
<), >
<;, >
<print, >
<(, >
<id, saludar>
<(, >
<id, nombre>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, PRUEBA 3>
<), >
<;, >
<var, >
<int, >
<id, j>
<=, >
<cte_int, 0>
<;, >
<var, >
<int, >
<id, i>
<=, >
<cte_int, 0>
<;, >
<print, >
<(, >
<cte_cadena, Numeros del 0 al 9:>
<), >
<;, >
<for, >
<(, >
<var, >
<int, >
<id, i>
<=, >
<cte_int, 0>
<;, >
<id, i>
<<, >
<cte_int, 10>
<;, >
<id, i>
<++, >
<), >
<{, >
<print, >
<(, >
<id, i>
<), >
<;, >
<}, >
<print, >
<(, >
<cte_cadena, Tablas de multiplicar:>
<), >
<;, >
<for, >
<(, >
<var, >
<int, >
<id, i>
<=, >
<cte_int, 0>
<;, >
<id, i>
<<, >
<cte_int, 10>
<;, >
<id, i>
<++, >
<), >
<{, >
<print, >
<(, >
<cte_cadena, Tabla del>
<), >
<;, >
<print, >
<(, >
<id, i>
<), >
<;, >
<print, >
<(, >
<cte_cadena, -------------->
<), >
<;, >
<id, j>
<=, >
<cte_int, 0>
<;, >
<for, >
<(, >
<var, >
<int, >
<id, j>
<=, >
<cte_int, 0>
<;, >
<id, j>
<<, >
<cte_int, 10>
<;, >
<id, j>
<++, >
<), >
<{, >
<print, >
<(, >
<id, i>
<*, >
<id, j>
<), >
<;, >
<}, >
<print, >
<(, >
<cte_cadena, -------------->
<), >
<;, >
<}, >
<print, >
<(, >
<cte_cadena, For invertido:>
<), >
<;, >
<for, >
<(, >
<var, >
<int, >
<id, i>
<=, >
<cte_int, 10>
<;, >
<id, i>
<>, >
<cte_int, 0>
<;, >
<id, i>
<--, >
<), >
<{, >
<print, >
<(, >
<id, i>
<), >
<;, >
<}, >
<function, >
<id, bucle>
<(, >
<int, >
<id, x>
<,, >
<int, >
<id, z>
<), >
<{, >
<id, i>
<=, >
<cte_int, 0>
<;, >
<for, >
<(, >
<var, >
<int, >
<id, i>
<=, >
<cte_int, 0>
<;, >
<id, i>
<<, >
<id, x>
<;, >
<id, i>
<=, >
<id, i>
<+, >
<id, z>
<), >
<{, >
<print, >
<(, >
<id, i>
<), >
<;, >
<}, >
<return, >
<;, >
<}, >
<id, bucle>
<(, >
<cte_int, 20>
<,, >
<cte_int, 4>
<), >
<;, >
<print, >
<(, >
<cte_cadena, >
<), >
<;, >
<function, >
<id, divisiones>
<(, >
<int, >
<id, x>
<), >
<{, >
<for, >
<(, >
<var, >
<int, >
<id, i>
<=, >
<cte_int, 0>
<;, >
<id, i>
<<, >
<cte_int, 100>
<;, >
<id, i>
<=, >
<id, i>
<+, >
<(, >
<cte_int, 100>
</, >
<id, x>
<), >
<), >
<{, >
<print, >
<(, >
<id, i>
<), >
<;, >
<}, >
<return, >
<;, >
<}, >
<print, >
<(, >
<cte_cadena, PRUEBA 4>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Hacer 5 divisiones>
<), >
<;, >
<id, divisiones>
<(, >
<cte_int, 5>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Hacer 20 divisiones>
<), >
<;, >
<id, divisiones>
<(, >
<cte_int, 20>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Hacer 10 divisiones>
<), >
<;, >
<id, divisiones>
<(, >
<cte_int, 10>
<), >
<;, >
<if, >
<(, >
<cte_int, 1>
<>, >
<cte_int, 2>
<), >
<print, >
<(, >
<cte_cadena, Correcto>
<), >
<;, >
<id, a>
<=, >
<cte_int, 1>
<;, >
<id, b>
<=, >
<cte_int, 1>
<;, >
<id, c>
<=, >
<cte_int, 0>
<;, >
<id, x>
<=, >
<cte_int, 5>
<;, >
<function, >
<int, >
<id, suma>
<(, >
<int, >
<id, a>
<,, >
<int, >
<id, b>
<), >
<{, >
<return, >
<id, a>
<+, >
<id, b>
<;, >
<}, >
<function, >
<int, >
<id, resta>
<(, >
<int, >
<id, a>
<,, >
<int, >
<id, b>
<), >
<{, >
<return, >
<id, a>
<-, >
<id, b>
<;, >
<}, >
<for, >
<(, >
<var, >
<int, >
<id, j>
<=, >
<cte_int, 0>
<;, >
<id, j>
<<, >
<id, x>
<;, >
<id, j>
<++, >
<), >
<{, >
<id, c>
<=, >
<id, suma>
<(, >
<id, a>
<,, >
<id, b>
<), >
<;, >
<id, a>
<=, >
<id, b>
<;, >
<id, b>
<=, >
<id, c>
<;, >
<}, >
<print, >
<(, >
<cte_cadena, Deberia imprimir 13>
<), >
<;, >
<print, >
<(, >
<id, b>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Tiene que imprimir -1>
<), >
<;, >
<var, >
<int, >
<id, r>
<=, >
<cte_int, -1>
<;, >
<print, >
<(, >
<id, r>
<), >
<;, >
<print, >
<(, >
<cte_cadena, Deberia imprimir ((((((((6+1)+(0-1))+(0-1))+(0-1))+(0-1))+(0-1))+(0-1))+(0-1))=0>
<), >
<;, >
<var, >
<int, >
<id, z>
<=, >
<cte_int, 0>
<;, >
<id, z>
<=, >
<id, suma>
<(, >
<id, suma>
<(, >
<id, suma>
<(, >
<id, suma>
<(, >
<id, suma>
<(, >
<id, suma>
<(, >
<id, suma>
<(, >
<id, suma>
<(, >
<cte_int, 6>
<,, >
<cte_int, 1>
<), >
<,, >
<id, resta>
<(, >
<cte_int, 0>
<,, >
<cte_int, 1>
<), >
<), >
<,, >
<id, resta>
<(, >
<cte_int, 0>
<,, >
<cte_int, 1>
<), >
<), >
<,, >
<id, resta>
<(, >
<cte_int, 0>
<,, >
<cte_int, 1>
<), >
<), >
<,, >
<id, resta>
<(, >
<cte_int, 0>
<,, >
<cte_int, 1>
<), >
<), >
<,, >
<id, resta>
<(, >
<cte_int, 0>
<,, >
<cte_int, 1>
<), >
<), >
<,, >
<id, resta>
<(, >
<cte_int, 0>
<,, >
<cte_int, 1>
<), >
<), >
<,, >
<id, resta>
<(, >
<cte_int, 0>
<,, >
<cte_int, 1>
<), >
<), >
<;, >
<print, >
<(, >
<id, z>
<), >
<;, >
<function, >
<int, >
<id, sumaMasUno>
<(, >
<int, >
<id, a>
<,, >
<int, >
<id, b>
<), >
<{, >
<return, >
<id, suma>
<(, >
<id, a>
<+, >
<id, b>
<,, >
<cte_int, 1>
<), >
<;, >
<}, >
<print, >
<(, >
<cte_cadena, Deberia imprimir 5>
<), >
<;, >
<print, >
<(, >
<id, sumaMasUno>
<(, >
<cte_int, 3>
<,, >
<cte_int, 1>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, PRUEBA 5>
<), >
<;, >
<function, >
<int, >
<id, fibonacci>
<(, >
<int, >
<id, x>
<), >
<{, >
<var, >
<bool, >
<id, valorFijo>
<=, >
<cte_logica, false>
<;, >
<var, >
<int, >
<id, a>
<=, >
<cte_int, 1>
<;, >
<var, >
<int, >
<id, b>
<=, >
<cte_int, 1>
<;, >
<if, >
<(, >
<id, x>
<<=, >
<cte_int, 2>
<), >
<id, valorFijo>
<=, >
<cte_logica, true>
<;, >
<if, >
<(, >
<!, >
<id, valorFijo>
<), >
<id, a>
<=, >
<id, fibonacci>
<(, >
<id, x>
<cte_int, -1>
<), >
<;, >
<if, >
<(, >
<!, >
<id, valorFijo>
<), >
<id, b>
<=, >
<id, fibonacci>
<(, >
<id, x>
<cte_int, -2>
<), >
<;, >
<var, >
<int, >
<id, resultado>
<=, >
<cte_int, 0>
<;, >
<id, resultado>
<=, >
<id, a>
<+, >
<id, b>
<;, >
<if, >
<(, >
<id, valorFijo>
<), >
<id, resultado>
<=, >
<cte_int, 1>
<;, >
<return, >
<id, resultado>
<;, >
<}, >
<print, >
<(, >
<cte_cadena, Termino numero 3 de serie de Fibonacci>
<), >
<;, >
<print, >
<(, >
<id, fibonacci>
<(, >
<cte_int, 3>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, Termino numero 7 de serie de Fibonacci>
<), >
<;, >
<print, >
<(, >
<id, fibonacci>
<(, >
<cte_int, 7>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, Termino numero 25 de serie de Fibonacci>
<), >
<;, >
<print, >
<(, >
<id, fibonacci>
<(, >
<cte_int, 25>
<), >
<), >
<;, >
<function, >
<int, >
<id, collatz>
<(, >
<int, >
<id, x>
<), >
<{, >
<print, >
<(, >
<id, x>
<), >
<;, >
<var, >
<int, >
<id, retorno>
<=, >
<cte_int, 0>
<;, >
<if, >
<(, >
<(, >
<id, x>
<%, >
<cte_int, 2>
<), >
<==, >
<cte_int, 0>
<), >
<id, retorno>
<=, >
<id, collatz>
<(, >
<id, x>
</, >
<cte_int, 2>
<), >
<;, >
<if, >
<(, >
<(, >
<!, >
<(, >
<id, x>
<==, >
<cte_int, 1>
<), >
<), >
<&&, >
<(, >
<(, >
<id, x>
<%, >
<cte_int, 2>
<), >
<==, >
<cte_int, 1>
<), >
<), >
<id, retorno>
<=, >
<id, collatz>
<(, >
<(, >
<cte_int, 3>
<*, >
<id, x>
<), >
<+, >
<cte_int, 1>
<), >
<;, >
<return, >
<id, retorno>
<;, >
<}, >
<print, >
<(, >
<cte_cadena, Serie de Collatz para 4:>
<), >
<;, >
<print, >
<(, >
<id, collatz>
<(, >
<cte_int, 4>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, Serie de Collatz para 5:>
<), >
<;, >
<print, >
<(, >
<id, collatz>
<(, >
<cte_int, 5>
<), >
<), >
<;, >
<print, >
<(, >
<cte_cadena, Serie de Collatz para 15:>
<), >
<;, >
<print, >
<(, >
<id, collatz>
<(, >
<cte_int, 15>
<), >
<), >
<;, >
